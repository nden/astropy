.. _whatsnew-4.0:

**************************
What's New in Astropy 4.0?
**************************

Overview
========

Astropy 4.0 is a major release that ...  since
the 3.2.x series of releases.

In particular, this release includes:

*
*

In addition to these major changes, Astropy v4.0 includes a large number of
smaller improvements and bug fixes, which are described in the
:ref:`changelog`. By the numbers:

* xxx issues have been closed since v3.2
* xxx pull requests have been merged since v3.2
* xxx distinct people have contributed code


Pre-publication Planck 2018 cosmological parameters
---------------------------------------------------


New models
----------

.. Blackbody changes
.. Drude1D
.. Analytical King
.. Exponential1D and Logarithmic1D


New functions/modes for combining tables
----------------------------------------

.. dstack
.. cartesian join

Consistency of physical constants and units
-------------------------------------------


Updates to Galactocentric frame
-------------------------------


New ``ymdhms`` Time format
--------------------------


New context manager for plotting Time values
--------------------------------------------

Matplotlib natively provides a mechanism for plotting dates and times on one
or both of the axes, as described in
`Date tick labels <https://matplotlib.org/3.1.0/gallery/text_labels_and_annotations/date.html>`_.
To make use of this, you can use the ``plot_date`` attribute of :class:`~astropy.time.Time` to get
values in the time system used by Matplotlib.

However, in many cases, you will probably want to have more control over the
precise scale and format to use for the tick labels, in which case you can make
use of the `~astropy.visualization.time_support` function which can be called
either directly or as a context manager, and after which :class:`~astropy.time.Time` objects can be
passed to matplotlib plotting functions. The axes are then automatically labeled
with times formatted using the :class:`~astropy.time.Time` class:

.. plot::
   :include-source:
   :context: reset

    >>> from matplotlib import pyplot as plt
    >>> from astropy.time import Time
    >>> from astropy.visualization import time_support
    >>> time_support(format='isot', scale='tai')  # doctest: +IGNORE_OUTPUT
    >>> plt.figure(figsize=(5,3))  # doctest: +IGNORE_OUTPUT
    >>> plt.plot(Time([52000, 53000, 54000], format='mjd'), [1.2, 3.3, 2.3])  # doctest: +IGNORE_OUTPUT

For more information, see :ref:`plotting-times`.

Support for parsing high-precision values with Time
---------------------------------------------------


Improved compatibility of Quantity objects with Numpy functions
---------------------------------------------------------------


Plotting 1-d profile plots with WCSAxes
---------------------------------------


Default labelling with WCSAxes
------------------------------


New function to fit WCS to pairs of pixel/world coordinates
-----------------------------------------------------------


Support for WCS transformations between pixel and Time values
-------------------------------------------------------------

The :meth:`WCS.world_to_pixel <astropy.wcs.WCS.world_to_pixel>` and
:meth:`WCS.pixel_to_world <astropy.wcs.WCS.pixel_to_world>` methods can now
take and return :class:`~astropy.time.Time` objects for WCS transforamtions
that involve time::

    >>> from astropy.io import fits
    >>> from astropy.wcs import WCS
    >>> header = fits.Header()
    >>> header['CTYPE1'] = 'TIME'
    >>> header['CDELT1'] = 86400.
    >>> header['MJDREF'] = 58788.
    >>> wcs = WCS(header)
    >>> wcs.pixel_to_world([2, 3, 4])
    <Time object: scale='utc' format='mjd' value=[58791. 58792. 58793.]>
    >>> wcs.world_to_pixel(Time('2019-11-02T10:30:22'))
    array(0.43775463)

Improvements to folding for time series
---------------------------------------


Support for surface brightnesses in spectral_density equivalencies
------------------------------------------------------------------


New cache import/export utilities
---------------------------------


Performance improvements for tables
-----------------------------------


Improved handling of leap second updates
----------------------------------------

.. custom IERS table
.. LeapSecond class


API changes in astropy.modeling
-------------------------------

.. changes for compound models


Full change log
===============

To see a detailed list of all changes in version v4.0, including changes in
API, please see the :ref:`changelog`.


Renamed/removed functionality
=============================
